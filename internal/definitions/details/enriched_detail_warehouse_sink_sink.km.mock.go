// Code generated by MockGen. DO NOT EDIT.
// Source: /home/jeff/source/syncromatics/kafmesh-example/internal/definitions/details/enriched_detail_warehouse_sink_sink.km.go

// Package details is a generated GoMock package.
package details

import (
	gomock "github.com/golang/mock/gomock"
	runner "github.com/syncromatics/kafmesh/pkg/runner"
	deviceId "kafmesh-example/internal/definitions/models/kafmesh/deviceId"
	reflect "reflect"
)

// MockEnrichedDetailWarehouseSink_Sink is a mock of EnrichedDetailWarehouseSink_Sink interface
type MockEnrichedDetailWarehouseSink_Sink struct {
	ctrl     *gomock.Controller
	recorder *MockEnrichedDetailWarehouseSink_SinkMockRecorder
}

// MockEnrichedDetailWarehouseSink_SinkMockRecorder is the mock recorder for MockEnrichedDetailWarehouseSink_Sink
type MockEnrichedDetailWarehouseSink_SinkMockRecorder struct {
	mock *MockEnrichedDetailWarehouseSink_Sink
}

// NewMockEnrichedDetailWarehouseSink_Sink creates a new mock instance
func NewMockEnrichedDetailWarehouseSink_Sink(ctrl *gomock.Controller) *MockEnrichedDetailWarehouseSink_Sink {
	mock := &MockEnrichedDetailWarehouseSink_Sink{ctrl: ctrl}
	mock.recorder = &MockEnrichedDetailWarehouseSink_SinkMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockEnrichedDetailWarehouseSink_Sink) EXPECT() *MockEnrichedDetailWarehouseSink_SinkMockRecorder {
	return m.recorder
}

// Flush mocks base method
func (m *MockEnrichedDetailWarehouseSink_Sink) Flush() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Flush")
	ret0, _ := ret[0].(error)
	return ret0
}

// Flush indicates an expected call of Flush
func (mr *MockEnrichedDetailWarehouseSink_SinkMockRecorder) Flush() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Flush", reflect.TypeOf((*MockEnrichedDetailWarehouseSink_Sink)(nil).Flush))
}

// Collect mocks base method
func (m *MockEnrichedDetailWarehouseSink_Sink) Collect(ctx runner.MessageContext, key string, msg *deviceId.EnrichedDetails) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Collect", ctx, key, msg)
	ret0, _ := ret[0].(error)
	return ret0
}

// Collect indicates an expected call of Collect
func (mr *MockEnrichedDetailWarehouseSink_SinkMockRecorder) Collect(ctx, key, msg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Collect", reflect.TypeOf((*MockEnrichedDetailWarehouseSink_Sink)(nil).Collect), ctx, key, msg)
}
