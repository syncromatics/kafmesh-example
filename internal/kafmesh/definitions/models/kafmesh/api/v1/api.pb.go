// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kafmesh/api/v1/api.proto

package apiv1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetAssignmentRequest struct {
	DeviceId             int64    `protobuf:"varint,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAssignmentRequest) Reset()         { *m = GetAssignmentRequest{} }
func (m *GetAssignmentRequest) String() string { return proto.CompactTextString(m) }
func (*GetAssignmentRequest) ProtoMessage()    {}
func (*GetAssignmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_703581f022bd0c53, []int{0}
}

func (m *GetAssignmentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAssignmentRequest.Unmarshal(m, b)
}
func (m *GetAssignmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAssignmentRequest.Marshal(b, m, deterministic)
}
func (m *GetAssignmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAssignmentRequest.Merge(m, src)
}
func (m *GetAssignmentRequest) XXX_Size() int {
	return xxx_messageInfo_GetAssignmentRequest.Size(m)
}
func (m *GetAssignmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAssignmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAssignmentRequest proto.InternalMessageInfo

func (m *GetAssignmentRequest) GetDeviceId() int64 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

type GetAssignmentResponse struct {
	CustomerId           *wrappers.Int64Value `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetAssignmentResponse) Reset()         { *m = GetAssignmentResponse{} }
func (m *GetAssignmentResponse) String() string { return proto.CompactTextString(m) }
func (*GetAssignmentResponse) ProtoMessage()    {}
func (*GetAssignmentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_703581f022bd0c53, []int{1}
}

func (m *GetAssignmentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAssignmentResponse.Unmarshal(m, b)
}
func (m *GetAssignmentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAssignmentResponse.Marshal(b, m, deterministic)
}
func (m *GetAssignmentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAssignmentResponse.Merge(m, src)
}
func (m *GetAssignmentResponse) XXX_Size() int {
	return xxx_messageInfo_GetAssignmentResponse.Size(m)
}
func (m *GetAssignmentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAssignmentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAssignmentResponse proto.InternalMessageInfo

func (m *GetAssignmentResponse) GetCustomerId() *wrappers.Int64Value {
	if m != nil {
		return m.CustomerId
	}
	return nil
}

type AssignDeviceRequest struct {
	DeviceId             int64    `protobuf:"varint,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	CustomerId           int64    `protobuf:"varint,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssignDeviceRequest) Reset()         { *m = AssignDeviceRequest{} }
func (m *AssignDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*AssignDeviceRequest) ProtoMessage()    {}
func (*AssignDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_703581f022bd0c53, []int{2}
}

func (m *AssignDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignDeviceRequest.Unmarshal(m, b)
}
func (m *AssignDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignDeviceRequest.Marshal(b, m, deterministic)
}
func (m *AssignDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignDeviceRequest.Merge(m, src)
}
func (m *AssignDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_AssignDeviceRequest.Size(m)
}
func (m *AssignDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AssignDeviceRequest proto.InternalMessageInfo

func (m *AssignDeviceRequest) GetDeviceId() int64 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

func (m *AssignDeviceRequest) GetCustomerId() int64 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

type AssignDeviceResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssignDeviceResponse) Reset()         { *m = AssignDeviceResponse{} }
func (m *AssignDeviceResponse) String() string { return proto.CompactTextString(m) }
func (*AssignDeviceResponse) ProtoMessage()    {}
func (*AssignDeviceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_703581f022bd0c53, []int{3}
}

func (m *AssignDeviceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignDeviceResponse.Unmarshal(m, b)
}
func (m *AssignDeviceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignDeviceResponse.Marshal(b, m, deterministic)
}
func (m *AssignDeviceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignDeviceResponse.Merge(m, src)
}
func (m *AssignDeviceResponse) XXX_Size() int {
	return xxx_messageInfo_AssignDeviceResponse.Size(m)
}
func (m *AssignDeviceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignDeviceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AssignDeviceResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*GetAssignmentRequest)(nil), "kafmesh.api.v1.GetAssignmentRequest")
	proto.RegisterType((*GetAssignmentResponse)(nil), "kafmesh.api.v1.GetAssignmentResponse")
	proto.RegisterType((*AssignDeviceRequest)(nil), "kafmesh.api.v1.AssignDeviceRequest")
	proto.RegisterType((*AssignDeviceResponse)(nil), "kafmesh.api.v1.AssignDeviceResponse")
}

func init() { proto.RegisterFile("kafmesh/api/v1/api.proto", fileDescriptor_703581f022bd0c53) }

var fileDescriptor_703581f022bd0c53 = []byte{
	// 286 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x50, 0xcf, 0x4a, 0xc3, 0x30,
	0x18, 0x67, 0x1b, 0x8a, 0x7e, 0xd3, 0x1d, 0xe2, 0x94, 0xd2, 0x81, 0x4a, 0x9d, 0xe0, 0x29, 0xa5,
	0x9b, 0x78, 0xf2, 0x52, 0x11, 0xa4, 0x78, 0xab, 0x38, 0x50, 0x04, 0xc9, 0xd6, 0x6f, 0x35, 0xb8,
	0x36, 0xb1, 0x49, 0xeb, 0x3b, 0xf9, 0x10, 0x3e, 0x9b, 0xac, 0x69, 0x61, 0x1d, 0x43, 0x3d, 0x05,
	0xf2, 0xfb, 0xfb, 0xfd, 0xc0, 0x7a, 0x67, 0xf3, 0x04, 0xd5, 0x9b, 0xcb, 0x24, 0x77, 0x0b, 0x6f,
	0xf9, 0x50, 0x99, 0x09, 0x2d, 0x48, 0xaf, 0x42, 0xe8, 0xf2, 0xab, 0xf0, 0xec, 0xe3, 0x58, 0x88,
	0x78, 0x81, 0x6e, 0x89, 0x4e, 0xf3, 0xb9, 0xfb, 0x99, 0x31, 0x29, 0x31, 0x53, 0x86, 0xef, 0x8c,
	0xa1, 0x7f, 0x87, 0xda, 0x57, 0x8a, 0xc7, 0x69, 0x82, 0xa9, 0x0e, 0xf1, 0x23, 0x47, 0xa5, 0xc9,
	0x00, 0x76, 0x23, 0x2c, 0xf8, 0x0c, 0x5f, 0x79, 0x64, 0xb5, 0x4e, 0x5b, 0x17, 0x9d, 0x70, 0xc7,
	0x7c, 0x04, 0x91, 0xf3, 0x08, 0x87, 0x6b, 0x22, 0x25, 0x45, 0xaa, 0x90, 0x5c, 0x43, 0x77, 0x96,
	0x2b, 0x2d, 0x12, 0xcc, 0x6a, 0x5d, 0x77, 0x34, 0xa0, 0xa6, 0x03, 0xad, 0x3b, 0xd0, 0x20, 0xd5,
	0x57, 0x97, 0x13, 0xb6, 0xc8, 0x31, 0x84, 0x9a, 0x1f, 0x44, 0xce, 0x03, 0x1c, 0x18, 0xcf, 0xdb,
	0x32, 0xe8, 0x3f, 0x55, 0xc8, 0x49, 0x33, 0xb1, 0x5d, 0xc2, 0xab, 0xa6, 0x47, 0xd0, 0x6f, 0x9a,
	0x9a, 0xaa, 0xa3, 0xef, 0x16, 0x74, 0x7c, 0xc9, 0xc9, 0x0b, 0xec, 0x37, 0x6e, 0x21, 0x43, 0xda,
	0x9c, 0x90, 0x6e, 0xda, 0xc7, 0x3e, 0xff, 0x83, 0x55, 0x0d, 0xf2, 0x04, 0x7b, 0xab, 0xe9, 0xe4,
	0x6c, 0x5d, 0xb6, 0xe1, 0x60, 0x7b, 0xf8, 0x3b, 0xc9, 0x58, 0xdf, 0x58, 0xcf, 0x5b, 0x4c, 0xf2,
	0xc2, 0xfb, 0x6a, 0xf7, 0xee, 0x2b, 0xba, 0x2f, 0x39, 0x9d, 0x78, 0xd3, 0xed, 0x72, 0xe8, 0xf1,
	0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x03, 0x6d, 0xa9, 0xfa, 0x26, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ApiClient is the client API for Api service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ApiClient interface {
	GetAssignment(ctx context.Context, in *GetAssignmentRequest, opts ...grpc.CallOption) (*GetAssignmentResponse, error)
	AssignDevice(ctx context.Context, in *AssignDeviceRequest, opts ...grpc.CallOption) (*AssignDeviceResponse, error)
}

type apiClient struct {
	cc *grpc.ClientConn
}

func NewApiClient(cc *grpc.ClientConn) ApiClient {
	return &apiClient{cc}
}

func (c *apiClient) GetAssignment(ctx context.Context, in *GetAssignmentRequest, opts ...grpc.CallOption) (*GetAssignmentResponse, error) {
	out := new(GetAssignmentResponse)
	err := c.cc.Invoke(ctx, "/kafmesh.api.v1.Api/GetAssignment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) AssignDevice(ctx context.Context, in *AssignDeviceRequest, opts ...grpc.CallOption) (*AssignDeviceResponse, error) {
	out := new(AssignDeviceResponse)
	err := c.cc.Invoke(ctx, "/kafmesh.api.v1.Api/AssignDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ApiServer is the server API for Api service.
type ApiServer interface {
	GetAssignment(context.Context, *GetAssignmentRequest) (*GetAssignmentResponse, error)
	AssignDevice(context.Context, *AssignDeviceRequest) (*AssignDeviceResponse, error)
}

// UnimplementedApiServer can be embedded to have forward compatible implementations.
type UnimplementedApiServer struct {
}

func (*UnimplementedApiServer) GetAssignment(ctx context.Context, req *GetAssignmentRequest) (*GetAssignmentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAssignment not implemented")
}
func (*UnimplementedApiServer) AssignDevice(ctx context.Context, req *AssignDeviceRequest) (*AssignDeviceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AssignDevice not implemented")
}

func RegisterApiServer(s *grpc.Server, srv ApiServer) {
	s.RegisterService(&_Api_serviceDesc, srv)
}

func _Api_GetAssignment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAssignmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).GetAssignment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kafmesh.api.v1.Api/GetAssignment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).GetAssignment(ctx, req.(*GetAssignmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_AssignDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssignDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).AssignDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kafmesh.api.v1.Api/AssignDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).AssignDevice(ctx, req.(*AssignDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Api_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kafmesh.api.v1.Api",
	HandlerType: (*ApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAssignment",
			Handler:    _Api_GetAssignment_Handler,
		},
		{
			MethodName: "AssignDevice",
			Handler:    _Api_AssignDevice_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kafmesh/api/v1/api.proto",
}
