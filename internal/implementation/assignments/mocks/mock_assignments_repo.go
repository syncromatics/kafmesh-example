// Code generated by MockGen. DO NOT EDIT.
// Source: ./deviceCustomer_viewSource.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	"kafmesh-example/internal/warehouse"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockassignmentRepo is a mock of assignmentRepo interface
type MockassignmentRepo struct {
	ctrl     *gomock.Controller
	recorder *MockassignmentRepoMockRecorder
}

// MockassignmentRepoMockRecorder is the mock recorder for MockassignmentRepo
type MockassignmentRepoMockRecorder struct {
	mock *MockassignmentRepo
}

// NewMockassignmentRepo creates a new mock instance
func NewMockassignmentRepo(ctrl *gomock.Controller) *MockassignmentRepo {
	mock := &MockassignmentRepo{ctrl: ctrl}
	mock.recorder = &MockassignmentRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockassignmentRepo) EXPECT() *MockassignmentRepoMockRecorder {
	return m.recorder
}

// AllDetails mocks base method
func (m *MockassignmentRepo) AllDetails(arg0 context.Context) ([]warehouse.Details, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AllDetails", arg0)
	ret0, _ := ret[0].([]warehouse.Details)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AllDetails indicates an expected call of AllDetails
func (mr *MockassignmentRepoMockRecorder) AllDetails(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AllDetails", reflect.TypeOf((*MockassignmentRepo)(nil).AllDetails), arg0)
}
